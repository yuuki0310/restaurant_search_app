<h1>レストラン検索</h1>
<%= form_with url: "/restaurants", method: :get do |f| %>
  <%= f.hidden_field :lat %>
  <%= f.hidden_field :lng %>
  <p>検索範囲</p>
  <div class="radio-buttons">
    <%= f.radio_button :range, 1, id: "range_300m" %>
    <%= f.label :range_300m, "300m", for: "range_300m" %>
    <%= f.radio_button :range, 2, id: "range_500m" %>
    <%= f.label :range_500m, "500m", for: "range_500m" %>
    <%= f.radio_button :range, 3, id: "range_1000m", checked: true %>
    <%= f.label :range_1000m, "1000m", for: "range_1000m" %>
    <%= f.radio_button :range, 4, id: "range_2000m" %>
    <%= f.label :range_2000m, "2000m", for: "range_2000m" %>
    <%= f.radio_button :range, 5, id: "range_3000m" %>
    <%= f.label :range_3000m, "3000m", for: "range_3000m" %>
  </div>
  <%= f.submit "検索" %>
<% end %>
<div id="map" class="map-container"></div>
<input type="text" id="keyword" class="input-field">
<button id="latlng_search" class="search-button">住所検索</button>
<button id="current_location" class="current_location">現在地</button>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async></script>

<script>
  let map;
  let marker
  function initMap() {
    const currentLocationButton = document.getElementById('current_location')
    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(function (position) {
        // 位置情報が取得できた場合の処理
        setCurrentLocationMap(position)
        // 現在地ボタンを押したとき
        currentLocationButton.addEventListener('click', function() {
          setCurrentLocationMap(position)
        });
      }, function(error) {
        // 位置情報が取得できなかった場合の処理
        setDefaultLocationMap()
        currentLocationButton.addEventListener('click', function() {
          alert("位置情報が取得できませんでした。");
        });
      });
    } else {
      // 位置情報の取得がサポートされていない場合の処理
      setDefaultLocationMap()
      currentLocationButton.addEventListener('click', function() {
        alert("位置情報が取得できませんでした。");
      });
    }

    // 検索実行ボタンが押下されたとき
    document.getElementById('latlng_search').addEventListener('click', function() {

      let place = document.getElementById('keyword').value;
      let geocoder = new google.maps.Geocoder();

      geocoder.geocode({
        address: place
      }, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {

          let bounds = new google.maps.LatLngBounds();

          for (let i in results) {
            if (results[0].geometry) {
              // 緯度経度を取得
              let latlng = results[0].geometry.location;
              // 地図をセット
              setMap(latlng);
              // inputにlatlngをセット
              $('input[name="lat"]').val(latlng.lat);
              $('input[name="lng"]').val(latlng.lng);
            }
          }
        } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
          alert("見つかりません");
        } else {
          console.log(status);
          alert("エラー発生");
        }
      });
    });
  }

  // 現在地の地図とマーカをセット
  function setCurrentLocationMap(position) {
    const lat = position.coords.latitude;
    const lng = position.coords.longitude;

    const latLng = new google.maps.LatLng({lat: lat, lng: lng});
    setMap(latLng);

    // inputにlatlngをセット
    setLatLang(lat, lng)
  }

  function setDefaultLocationMap(){
    const lat = 34.7038394;
    const lng = 135.4949209;
    
    // グランフロント大阪を中心に表示
    const latLng = new google.maps.LatLng({lat: lat, lng: lng});
    setMap(latLng);

    // inputにlatlngをセット
    setLatLang(lat, lng)
  }
  
  // 地図のセットを実施する
  function setMap(setplace) {
    // 地図の中心を設定
    map = new google.maps.Map(document.getElementById('map'), {
      center:setplace,
      zoom: 15
    });

    // 既にあるマーカーを削除
    deleteMakers();

    // マーカーのセットを実施する
    marker = new google.maps.Marker({
      position: setplace,
      draggable: true,
      map: map,
    });

    //マーカーのドロップ（ドラッグ終了）時のイベント
    google.maps.event.addListener(marker, 'dragend', function(e) {
      setLatLang(e.latLng.lat(), e.latLng.lng());
    });
  }

  //マーカーを削除する
  function deleteMakers() {
    if(marker != null){
      marker.setMap(null);
    }
    marker = null;
  }

  // inputにlatlngをセット
  function setLatLang(lat, lng) {
    document.querySelector('input[name="lat"]').value = lat;
    document.querySelector('input[name="lng"]').value = lng;
  }
</script>
